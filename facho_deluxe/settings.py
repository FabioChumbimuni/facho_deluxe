"""
Django settings for facho_deluxe project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5zytf-@q(bx0^2k_4(g#0wh4kajud0ztawx5+5bw*+q4d^w6%u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_q',
    'scripts',
    'snmp_scheduler.apps.SnmpSchedulerConfig',
    'django_celery_beat',
    'django_celery_results'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
MIDDLEWARE.insert(1, "whitenoise.middleware.WhiteNoiseMiddleware")

ROOT_URLCONF = 'facho_deluxe.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Se utiliza BASE_DIR definido con Path para apuntar a la carpeta de plantillas
        'DIRS': [str(BASE_DIR / 'templates')],  
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'facho_deluxe.wsgi.application'
SESSION_COOKIE_SECURE = False


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'fiberprodata',
        'USER': 'fiberproadmin',
        'PASSWORD': 'noc12363',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Lima'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/



STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ConfiguraciÃ³n de Django-Q
Q_CLUSTER = {
    'name': 'DjangoQ',
    'workers': 4,
    'recycle': 500,
    'timeout': 60,
    'retry': 120,
    'queue_limit': 50,
    'bulk': 10,
    'orm': 'default',  # Comentar esta lÃ­nea si se usa Redis y descomentar la siguiente:
    # 'django_redis': 'default',
}
from celery.schedules import crontab
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True
CELERY_RESULT_BACKEND = 'django-db'
CELERY_TIMEZONE = 'America/Lima'  # Ajustar segÃºn zona horaria
CELERY_BEAT_SCHEDULE = {
    # Tarea SNMP unificada (cada 15 minutos)
    'tareas-snmp-programadas': {
        'task': 'snmp_scheduler.tasks.ejecutar_tareas_programadas',
        'schedule': crontab(minute='*/15'),  # :00, :15, :30, :45
        'options': {'queue': 'principal'}
    },

    # Tarea existente para scripts (cada hora en punto)
    'ejecutar-ciclo-scripts-cada-hora': {
        'task': 'scripts.tasks.ejecutar_ciclo_scripts',
        'schedule': crontab(minute=0, hour='*'),  # Ej: 12:00, 13:00, etc.
        'options': {'queue': 'principal'}
    },

    # Tarea existente para bloques programados
    'ejecutar-bloques-programados-cada-minuto': {
        'task': 'scripts.tasks.ejecutar_bloques_programados',
        'schedule': crontab(minute='*/5'),  # Cada 5 minutos
        'options': {'queue': 'principal'}
    }
}

CELERY_TASK_ROUTES = {
    'scripts.tasks.*': {'queue': 'principal'},
    'snmp_consultor.tasks.*_principal': {'queue': 'principal'},
    'snmp_consultor.tasks.*_secundario': {'queue': 'secundario'},
    'snmp_consultor.tasks.*_modo': {'queue': 'modo'},
}
ELERY_TASK_SOFT_TIME_LIMIT = 60  # 1 minuto para scripts
CELERY_WORKER_PREFETCH_MULTIPLIER = 4  # Balance entre rendimiento y consumo de memoria

# Tiempos especÃ­ficos para SNMP
CELERY_TASK_ANNOTATIONS = {
    'snmp_consultor.tasks.*': {
        'soft_time_limit': 65,  # 1 minuto + 5 segundos de gracia
        'time_limit': 70
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'snmp_format': {
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        }
    },
    'handlers': {
        'snmp_file': {
            'level': 'DEBUG',  # ðŸ‘ˆ Cambiar de INFO a DEBUG
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'snmp_tasks.log'),
            'formatter': 'snmp_format',
            'maxBytes': 10*1024*1024,
            'backupCount': 5
        },
        'console': {  # ðŸ‘ˆ AÃ±adir handler para consola
            'class': 'logging.StreamHandler',
            'formatter': 'snmp_format',
        }
    },
    'loggers': {
        'snmp_consultor': {
            'handlers': ['snmp_file', 'console'],  # ðŸ‘ˆ Mostrar en consola y archivo
            'level': 'DEBUG',  # ðŸ‘ˆ Nivel DEBUG
            'propagate': False
        }
    }
}

DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': '/home/facho_deluxe/db_backups/'}
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Usa la base de datos para sesiones
SESSION_COOKIE_AGE = 86400  # 24 horas
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True

# Generated by Django 3.2.25 on 2025-05-31 21:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OnuDato',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('host', models.CharField(db_column='host', max_length=100)),
                ('snmpindex', models.CharField(db_column='snmpindex', max_length=100)),
                ('snmpindexonu', models.CharField(db_column='snmpindexonu', max_length=50)),
                ('slotportonu', models.CharField(db_column='slotportonu', max_length=30)),
                ('onulogico', models.IntegerField(db_column='onulogico')),
                ('onudesc', models.CharField(blank=True, db_column='onudesc', max_length=255, null=True)),
                ('act_susp', models.CharField(db_column='act_susp', max_length=10)),
                ('serialonu', models.CharField(db_column='serialonu', max_length=50)),
                ('fecha', models.DateTimeField(db_column='fecha')),
                ('enviar', models.BooleanField(db_column='enviar', default=False)),
                ('estado_onu', models.CharField(blank=True, db_column='estado_onu', max_length=50, null=True)),
                ('ultima_desconexion', models.CharField(blank=True, db_column='ultima_desconexion', max_length=50, null=True)),
                ('potencia_rx', models.CharField(blank=True, db_column='potencia_rx', max_length=50, null=True)),
                ('potencia_tx', models.CharField(blank=True, db_column='potencia_tx', max_length=50, null=True)),
                ('last_down_time', models.CharField(blank=True, db_column='last_down_time', max_length=50, null=True)),
                ('distancia_m', models.CharField(blank=True, db_column='distancia_m', max_length=50, null=True)),
                ('modelo_onu', models.CharField(blank=True, db_column='modelo_onu', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Datos ONU',
                'verbose_name_plural': 'Datos ONUs',
                'db_table': 'onu_datos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EjecucionTareaSNMP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateTimeField(auto_now_add=True)),
                ('fin', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('P', 'Pendiente'), ('E', 'En Ejecución'), ('C', 'Completada'), ('F', 'Fallida')], default='P', max_length=1)),
                ('resultado', models.JSONField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Ejecución de Tarea',
                'verbose_name_plural': 'Ejecuciones de Tareas',
                'ordering': ['-inicio'],
            },
        ),
        migrations.CreateModel(
            name='TareaSNMP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la Tarea')),
                ('host_name', models.CharField(max_length=50, verbose_name='Nombre del Host')),
                ('host_ip', models.GenericIPAddressField(protocol='IPv4', verbose_name='IP del OLT')),
                ('comunidad', models.CharField(default='public', max_length=50, verbose_name='Comunidad SNMP')),
                ('tipo', models.CharField(choices=[('descubrimiento', 'Descubrimiento'), ('onudesc', 'Descripción ONU'), ('estado_onu', 'Estado ONU'), ('last_down', 'Última desconexión'), ('pot_rx', 'Potencia RX'), ('pot_tx', 'Potencia TX'), ('last_down_t', 'Last Down Time'), ('distancia_m', 'Distancia (m)'), ('modelo_onu', 'Modelo ONU')], default='descubrimiento', max_length=20)),
                ('intervalo', models.CharField(choices=[('00', '(00)'), ('15', '(15)'), ('30', '(30)'), ('45', '(45)')], default='00', max_length=10)),
                ('modo', models.CharField(choices=[('principal', 'Principal'), ('secundario', 'Secundario'), ('modo', 'Modo Especial')], default='principal', max_length=20)),
                ('activa', models.BooleanField(default=True, verbose_name='Tarea Activa')),
                ('ultima_ejecucion', models.DateTimeField(blank=True, null=True)),
                ('registros_activos', models.PositiveIntegerField(default=0, help_text='Contador actualizado automáticamente', verbose_name='ONUs Registradas')),
                ('oid_consulta', models.CharField(blank=True, editable=False, max_length=255, verbose_name='OID Automático')),
            ],
            options={
                'verbose_name': 'Tarea SNMP',
            },
        ),
        migrations.AddConstraint(
            model_name='tareasnmp',
            constraint=models.UniqueConstraint(condition=models.Q(('modo__in', ['principal', 'modo'])), fields=('host_ip', 'intervalo', 'modo'), name='unique_principal_modo'),
        ),
        migrations.AddConstraint(
            model_name='tareasnmp',
            constraint=models.UniqueConstraint(condition=models.Q(('modo', 'secundario')), fields=('host_ip', 'intervalo', 'modo', 'tipo'), name='unique_secundario_por_tipo'),
        ),
        migrations.AddField(
            model_name='ejecuciontareasnmp',
            name='tarea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ejecuciones', to='snmp_scheduler.tareasnmp'),
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
            ],
            options={
                'verbose_name': 'Supervisor',
                'verbose_name_plural': 'Supervisor',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('snmp_scheduler.tareasnmp',),
        ),
    ]
